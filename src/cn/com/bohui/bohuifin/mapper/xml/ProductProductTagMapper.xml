<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="cn.com.bohui.bohuifin.mapper.ProductProductTagMapper">    <resultMap type="ProductProductTagBean" id="ProductProductTagResult">        <result column="product_id" property="productId"/>        <result column="tag_id" property="tagId"/>        <result column="list_order" property="listOrder"/>        <result column="create_time" property="createTime"/>        <result column="create_by" property="createBy"/>        <result column="update_time" property="updateTime"/>        <result column="update_by" property="updateBy"/>        <result column="state" property="state"/>    </resultMap>    <sql id="baseSelect">		product_id,		tag_id,		list_order,		create_time,		create_by,		update_time,		update_by,		state	</sql>    <insert id="saveProductProductTag" parameterType="ProductProductTagBean">		insert into t_product_product_tag(product_id, tag_id, list_order, create_time, create_by, update_time, update_by, state)		values (#{productId}, #{tagId}, #{listOrder}, #{createTime}, #{createBy}, #{updateTime}, #{updateBy}, #{state})	</insert>    <update id="updateProductProductTag" parameterType="ProductProductTagBean">        update t_product_product_tag        set        list_order = #{listOrder}        <if test="updateTime != null">            ,update_time = #{updateTime}        </if>        <if test="updateBy != null">            ,update_by = #{updateBy}        </if>        <if test="state != null and state != 0">            ,state = #{state}        </if>        where        product_id = #{productId}    </update>    <select id="listProductProductTagByPage" parameterType="page" resultMap="ProductProductTagResult">        select        <include refid="baseSelect"/>        from        t_product_product_tag    </select>    <update id="removeProductProductTagByProductIdAndTagName" parameterType="ProductProductTagVo">        update        t_product_product_tag        set        state = #{state}        ,update_time = #{updateTime}        ,update_by = #{updateBy}        where        product_id = #{productId}        <if test="tagNames != null and tagNames.size() > 0">            and            tag_id in (            select            tag_id            from            t_product_tag            where            tag_name in            <foreach collection="tagNames" item="tagName" open="(" close=")" separator=",">                #{tagName}            </foreach>            )        </if>        and        state = #{prevState}    </update>    <update id="removeProductProductTagById" parameterType="ProductProductTagBean">        update        t_product_product_tag        set        state = #{state}        where        product_id = #{productId}        and        tag_id = #{tagId}	</update></mapper>