<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="cn.com.bohui.bohuifin.mapper.ProductMapper">    <resultMap type="ProductVo" id="ProductResult">        <result column="product_id" property="productId"/>        <result column="product_name" property="productName"/>        <result column="introduce" property="introduce"/>        <result column="dealer_id" property="dealerId"/>        <result column="product_type_id" property="productTypeId"/>        <result column="oper_state_id" property="operStateId"/>        <result column="is_oper_interval_set_up" property="isOperIntervalSetUp"/>        <result column="project_amount" property="projectAmount"/>        <result column="management_cost" property="managementCost"/>        <result column="stop_loss_value" property="stopLossValue"/>        <result column="expected_yield" property="expectedYield"/>        <result column="trading_cycle" property="tradingCycle"/>        <result column="list_order" property="listOrder"/>        <result column="create_time" property="createTime"/>        <result column="create_by" property="createBy"/>        <result column="update_time" property="updateTime"/>        <result column="update_by" property="updateBy"/>        <result column="state" property="state"/>    </resultMap>    <resultMap type="ProductVo" id="ProductTableResult">        <result column="product_id" property="productId"/>        <result column="product_name" property="productName"/>        <result column="introduce" property="introduce"/>        <result column="dealer_id" property="dealerId"/>        <result column="product_type_id" property="productTypeId"/>        <result column="oper_state_id" property="operStateId"/>        <result column="is_oper_interval_set_up" property="isOperIntervalSetUp"/>        <result column="project_amount" property="projectAmount"/>        <result column="investable_amount" property="investableAmount"/>        <result column="management_cost" property="managementCost"/>        <result column="stop_loss_value" property="stopLossValue"/>        <result column="expected_yield" property="expectedYield"/>        <result column="trading_cycle" property="tradingCycle"/>        <result column="list_order" property="listOrder"/>        <result column="create_time" property="createTime"/>        <result column="create_by" property="createBy"/>        <result column="update_time" property="updateTime"/>        <result column="update_by" property="updateBy"/>        <result column="state" property="state"/>        <association property="dealerBean" javaType="DealerBean">            <result column="dealer_id" property="dealerId"/>            <result column="true_name" property="trueName"/>            <result column="head_img" property="headImg"/>        </association>        <association property="productTypeBean" javaType="productTypeBean">            <result column="product_type_id" property="productTypeId"/>            <result column="product_type_name" property="productTypeName"/>        </association>        <association property="operStateBean" javaType="operStateBean">            <result column="oper_state_id" property="operStateId"/>            <result column="oper_state_name" property="operStateName"/>        </association>    </resultMap>    <sql id="baseSelect">		product_id,		product_name,		introduce,		dealer_id,		product_type_id,		oper_state_id,		is_oper_interval_set_up,		project_amount,		investable_amount,		management_cost,		stop_loss_value,		expected_yield,		trading_cycle,		list_order,		create_time,		create_by,		update_time,		update_by,		state	</sql>    <sql id="tableSelect">        select        p.product_id as product_id,		p.product_name as product_name,		p.introduce as introduce,		p.dealer_id as dealer_id,		d.true_name as true_name,		p.product_type_id as product_type_id,		pt.product_type_name as product_type_name,		p.oper_state_id as oper_state_id,		p.is_oper_interval_set_up as is_oper_interval_set_up,		os.oper_state_name as oper_state_name,		p.project_amount as project_amount,		p.investable_amount as investable_amount, 		p.management_cost as management_cost,		p.stop_loss_value as stop_loss_value,		p.expected_yield as expected_yield,		p.trading_cycle as trading_cycle,		p.list_order as list_order,		p.create_time as create_time,		p.create_by as create_by,		p.update_time as update_time,		p.update_by as update_by,		p.state as state		from		t_product p		left join		t_dealer d		on		p.dealer_id = d.dealer_id		left join		t_product_type pt		on		p.product_type_id = pt.product_type_id		left join		t_oper_state os		on		p.oper_state_id = os.oper_state_id    </sql>    <sql id="indexSelect">        select        p.product_id as product_id,        p.product_name as product_name,        p.introduce as introduce,        p.dealer_id as dealer_id,        d.true_name as true_name,        d.head_img as head_img,        p.product_type_id as product_type_id,        pt.product_type_name as product_type_name,        p.oper_state_id as oper_state_id,        p.is_oper_interval_set_up as is_oper_interval_set_up,        os.oper_state_name as oper_state_name,        p.project_amount as project_amount,        p.investable_amount as investable_amount,        p.management_cost as management_cost,        p.stop_loss_value as stop_loss_value,        p.expected_yield as expected_yield,        p.trading_cycle as trading_cycle,        p.list_order as list_order,        p.create_time as create_time,        p.create_by as create_by,        p.update_time as update_time,        p.update_by as update_by,        p.state as state        from        t_product p        left join        t_dealer d        on        p.dealer_id = d.dealer_id        left join        t_product_type pt        on        p.product_type_id = pt.product_type_id        left join        t_oper_state os        on        p.oper_state_id = os.oper_state_id    </sql>    <insert id="saveProduct" parameterType="ProductBean">		insert into t_product(product_id, product_name, introduce, dealer_id, product_type_id, oper_state_id, is_oper_interval_set_up, project_amount, investable_amount, management_cost, stop_loss_value, expected_yield, trading_cycle, list_order, create_time, create_by, state)		values (#{productId}, #{productName}, #{introduce}, #{dealerId}, #{productTypeId}, #{operStateId}, #{isOperIntervalSetUp}, #{projectAmount}, #{investableAmount} #{managementCost}, #{stopLossValue}, #{expectedYield}, #{tradingCycle}, #{listOrder}, #{createTime}, #{createBy}, #{state})	</insert>    <update id="updateProduct" parameterType="ProductBean">        update t_product        set        product_name = #{productName}        <if test="introduce != null">            ,introduce = #{introduce}        </if>        <if test="dealerId != null and dealerId != 0">            ,dealer_id = #{dealerId}        </if>        <if test="productTypeId != null and productTypeId != 0">            ,product_type_id = #{productTypeId}        </if>        <if test="operStateId != null">            ,oper_state_id = #{operStateId}        </if>        <if test="isOperIntervalSetUp != null">            ,is_oper_interval_set_up = #{isOperIntervalSetUp}        </if>        <if test="projectAmount != null and projectAmount != 0">            ,project_amount = #{projectAmount}        </if>        <if test="managementCost != null and managementCost != 0">            ,management_cost = #{managementCost}        </if>        <if test="stopLossValue != null">            ,stop_loss_value = #{stopLossValue}        </if>        <if test="expectedYield != null">            ,expected_yield = #{expectedYield}        </if>        <if test="tradingCycle != null and tradingCycle != 0">            ,trading_cycle = #{tradingCycle}        </if>        <if test="listOrder != null and listOrder != 0">            ,list_order = #{listOrder}        </if>        <if test="updateTime != null">            ,update_time = #{updateTime}        </if>        <if test="updateBy != null and updateBy != 0">            ,update_by = #{updateBy}        </if>        where        product_id = #{productId}    </update>    <update id="updateOperIntervalSetUp" parameterType="ProductBean">        update        t_product        set        is_oper_interval_set_up = #{isOperIntervalSetUp}        <if test="updateTime != null">            ,update_time = #{updateTime}        </if>        <if test="updateBy != null and updateBy != 0">            ,update_by = #{updateBy}        </if>        where        product_id = #{productId}    </update>    <update id="updateOperState" parameterType="ProductBean">        update        t_product        set        oper_state_id = #{operStateId}        where        product_id = #{productId}    </update>    <update id="updateState" parameterType="ProductBean">        update        t_product        set        state = #{state}        where        product_id = #{productId}    </update>    <select id="listAllProducts" parameterType="java.util.Map" resultMap="ProductTableResult">        <include refid="tableSelect"/>        where        p.state = #{state}        <if test="productName != null and productName != ''">            and p.product_name like #{productName}        </if>        <if test="productTypeId != null and productTypeId != 0">            and p.product_type_id = #{productTypeId}        </if>        <if test="operStateId != null and operStateId != 0">            and p.oper_state_id = #{operStateId}        </if>    </select>    <select id="listAllProducts4View" parameterType="java.util.Map" resultMap="ProductTableResult">        <include refid="indexSelect"/>        where        p.state = #{state}    </select>    <select id="listProductByPage" parameterType="page" resultMap="ProductTableResult">        <include refid="tableSelect"/>        where        p.state <![CDATA[<>]]> #{vo.state}        <if test="params.productName != null and params.productName != ''">            and p.product_name like #{params.productName}        </if>        <if test="vo.productTypeId != null and vo.productTypeId != 0">            and p.product_type_id = #{vo.productTypeId}        </if>        <if test="vo.operStateId != null and vo.operStateId != 0">            and p.oper_state_id = #{vo.operStateId}        </if>        <if test="vo.dealerId != null and vo.dealerId != 0">            and p.dealer_id = #{vo.dealerId}        </if>    </select>    <select id="listProductIds" parameterType="java.util.Map" resultType="java.lang.String">        select        product_id        from        t_product        where        state = #{state}    </select>    <select id="findProductById" parameterType="java.lang.String" resultMap="ProductResult">        select        <include refid="baseSelect"/>        from        t_product        where        product_id = #{productId}    </select>    <select id="getProductBean" parameterType="ProductBean" resultMap="ProductResult">        select            <include refid="baseSelect"/>        from            t_product        where            product_name = #{productName}        and            state = #{state}        <if test="productId != null and productId != ''">            and product_id <![CDATA[<>]]> #{productId}        </if>    </select>    <update id="changeInvestableAmount" parameterType="java.util.HashMap">        update          t_product        set          investable_amount = investable_amount - #{investAccount}        where          product_id = #{productId}    </update>    <update id="removeProductById" parameterType="ProductBean">		update		    t_product		set		    state = #{state},		    update_time = #{updateTime},		    update_by = #{updateBy}		where		    product_id = #{productId}	</update>    <update id="removeProductsById" parameterType="ProductBean">        update		    t_product		set		    state = #{state},		    update_time = #{updateTime},		    update_by = #{updateBy}		where		    product_id in		    <foreach collection="productIds" item="productId" open="(" close=")" separator=",">                #{productId}            </foreach>    </update></mapper>