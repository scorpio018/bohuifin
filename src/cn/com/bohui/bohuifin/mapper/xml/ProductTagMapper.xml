<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="cn.com.bohui.bohuifin.mapper.ProductTagMapper">    <resultMap type="ProductTagBean" id="ProductTagResult">        <result column="tag_id" property="tagId"/>        <result column="tag_name" property="tagName"/>        <result column="list_order" property="listOrder"/>        <result column="create_time" property="createTime"/>        <result column="create_by" property="createBy"/>        <result column="update_time" property="updateTime"/>        <result column="update_by" property="updateBy"/>    </resultMap>    <sql id="baseSelect">		tag_id,		tag_name,		list_order,		create_time,		create_by,		update_time,		update_by	</sql>    <sql id="tableSelect">		select		pt.tag_id as tag_id,		pt.tag_name as tag_name,		pt.list_order as list_order,		pt.create_time as create_time,		pt.create_by as create_by,		pt.update_time as update_time,		pt.update_by as update_by		from		t_product_product_tag ppt		left join		t_product_tag pt		on		ppt.tag_id = pt.tag_id	</sql>    <sql id="tagNameTableSelect">		select		pt.tag_name as tag_name		from		t_product_product_tag ppt		left join		t_product_tag pt		on		ppt.tag_id = pt.tag_id	</sql>    <insert id="saveProductTag" parameterType="ProductTagBean">		insert into t_product_tag(tag_id, tag_name, list_order, create_time, create_by, update_time, update_by, state)		values (#{tagId}, #{tagName}, #{listOrder}, #{createTime}, #{createBy}, #{updateTime}, #{updateBy}, #{state})	</insert>    <select id="findProductTagByTagName" parameterType="ProductTagBean" resultMap="ProductTagResult">        select        <include refid="baseSelect"/>        from        t_product_tag        where        tag_name = #{tagName}    </select>    <update id="updateProductTag" parameterType="ProductTagBean">        update t_product_tag        set        tag_name = #{tagName}        <if test="listOrder != null">            ,list_order = #{listOrder}        </if>        <if test="createTime != null">            ,create_time = #{createTime}        </if>        <if test="createBy != null">            ,create_by = #{createBy}        </if>        <if test="updateTime != null">            ,update_time = #{updateTime}        </if>        <if test="updateBy != null">            ,update_by = #{updateBy}        </if>        where        tag_id = #{tagId}    </update>    <select id="listProductTagByPage" parameterType="page" resultMap="ProductTagResult">        select        <include refid="baseSelect"/>        from        t_product_tag    </select>    <select id="listProductTagByProductId" parameterType="java.util.Map" resultMap="ProductTagResult">        <include refid="tableSelect"/>        where        ppt.product_id = #{productId}        and        ppt.state = #{state}        and        pt.state = #{state}    </select>    <select id="listProductTagNameByProductId" parameterType="java.util.Map" resultType="java.lang.String">        <include refid="tagNameTableSelect"/>        where        ppt.product_id = #{productId}        and        ppt.state = #{state}        and        pt.state = #{state}    </select>    <update id="removeProductTagByProductIdAndTagName" parameterType="java.util.Map">        update        t_product_tag pt        set        state = #{state}        where tag_id        in        (        select        tag_id        from        t_product_product_tag        where        product_id = #{productId}        )        and        tag_name in        <foreach collection="tagNames" separator="," open="(" close=")" item="tagName">            #{tagName}        </foreach>    </update>    <update id="removeProductTagById" parameterType="ProductTagBean">		update t_product_tag set state = #{state} where tag_id = #{tagId}	</update></mapper>