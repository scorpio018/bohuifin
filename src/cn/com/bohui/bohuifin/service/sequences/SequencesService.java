package cn.com.bohui.bohuifin.service.sequences;/** * 表名：t_sequences */import cn.com.bohui.bohuifin.bean.Page;import cn.com.bohui.bohuifin.bean.SequencesBean;import cn.com.bohui.bohuifin.mapper.SequencesMapper;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.sql.SQLException;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.UUID;@Servicepublic class SequencesService {	@Resource	private SequencesMapper sequencesMapper;	public String getId() throws Exception {		return UUID.randomUUID().toString().replaceAll("-", "");	}	public Long haveSeq(String seqName) throws Exception {		long val = sequencesMapper.selectCurValBySeqName(seqName);		if (val == -1) {			// throw new SQLException("序列"+seqName+"不存在");			Map<String, Object> map = new HashMap<String, Object>();			map.put("seqName", seqName);			map.put("initValue", new Long(1000));			map.put("curValue", new Long(1001));			sequencesMapper.insertSeq(map);			long result = 1000L;			return result;		} else if (val == -2) {			throw new SQLException("非法请求");		} else {			return val;		}	}	public void saveSequences(SequencesBean sequencesBean) throws Exception {		sequencesMapper.saveSequences(sequencesBean);	}	public void updateSequences(SequencesBean sequencesBean) throws Exception {		sequencesMapper.updateSequences(sequencesBean);	}	public List<SequencesBean> listSequencesByPage(Page<SequencesBean> page) throws Exception {		return sequencesMapper.listSequencesByPage(page);	}	public void removeSequencesById(SequencesBean sequencesBean) throws Exception {		sequencesMapper.removeSequencesById(sequencesBean);	}}