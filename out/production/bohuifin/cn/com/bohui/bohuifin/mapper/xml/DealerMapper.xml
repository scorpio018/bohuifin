<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="cn.com.bohui.bohuifin.mapper.DealerMapper">    <resultMap type="DealerBean" id="DealerResult">        <result column="dealer_id" property="dealerId"/>        <result column="dealer_name" property="dealerName"/>        <result column="pwd" property="pwd"/>        <result column="true_name" property="trueName"/>        <result column="nick_name" property="nickName"/>        <result column="head_img" property="headImg"/>        <result column="dept_id" property="deptId"/>        <result column="salt" property="salt"/>        <result column="introduce" property="introduce"/>        <result column="investment_philosophy" property="investmentPhilosophy"/>        <result column="investment_strategy" property="investmentStrategy"/>        <result column="overall_profit_and_loss" property="overallProfitAndLoss"/>        <result column="authority_group_id" property="authorityGroupId"/>        <result column="avg_profit_ratio" property="avgProfitRatio"/>        <result column="list_order" property="listOrder"/>        <result column="create_time" property="createTime"/>        <result column="create_by" property="createBy"/>        <result column="update_time" property="updateTime"/>        <result column="update_by" property="updateBy"/>        <result column="state" property="state"/>    </resultMap>    <resultMap type="DealerVo" id="DealerJoinProductsResult">        <result column="dealer_id" property="dealerId"/>        <result column="dealer_name" property="dealerName"/>        <result column="true_name" property="trueName"/>        <result column="nick_name" property="nickName"/>        <collection property="productBeans" resultMap="ProductResult" javaType="java.util.ArrayList" ofType="ProductBean"/>    </resultMap>    <resultMap type="ProductVo" id="ProductResult">        <result column="product_id" property="productId"/>        <result column="product_name" property="productName"/>        <result column="introduce" property="introduce"/>        <result column="dealer_id" property="dealerId"/>        <result column="product_type_id" property="productTypeId"/>        <result column="oper_state_id" property="operStateId"/>        <result column="is_oper_interval_set_up" property="isOperIntervalSetUp"/>        <result column="project_amount" property="projectAmount"/>        <result column="management_cost" property="managementCost"/>        <result column="stop_loss_value" property="stopLossValue"/>        <result column="expected_yield" property="expectedYield"/>        <result column="trading_cycle" property="tradingCycle"/>        <result column="list_order" property="listOrder"/>        <result column="create_time" property="createTime"/>        <result column="create_by" property="createBy"/>        <result column="update_time" property="updateTime"/>        <result column="update_by" property="updateBy"/>        <result column="state" property="state"/>    </resultMap>    <sql id="dealerJoinProductsSelect">        select        d.dealer_id as dealer_id,		d.dealer_name as dealer_name,		d.true_name as true_name,		p.product_id as product_id,		p.product_name as product_name		from		t_dealer d		left join		t_product p		on		d.dealer_id = p.dealer_id    </sql>    <sql id="baseSelect">		dealer_id,		dealer_name,		pwd,		true_name,		head_img,		dept_id,		salt,		authority_group_id,		nick_name,		list_order,		introduce,		investment_philosophy,		investment_strategy,		overall_profit_and_loss,		avg_profit_ratio,		create_time,		create_by,		update_time,		update_by,		state	</sql>    <insert id="saveDealer" parameterType="DealerBean">		insert into t_dealer(dealer_id, dealer_name, pwd, salt, true_name, nick_name, head_img, introduce, investment_philosophy, investment_strategy, overall_profit_and_loss, avg_profit_ratio, list_order, create_time, create_by, update_time, update_by, state)		values (#{dealerId}, #{dealerName}, #{pwd}, #{salt}, #{trueName}, #{nickName}, #{headImg}, #{introduce}, #{investmentPhilosophy}, #{investmentStrategy}, #{overallProfitAndLoss}, #{avgProfitRatio}, #{listOrder}, #{createTime}, #{createBy}, #{updateTime}, #{updateBy}, #{state})	</insert>    <update id="updatePwd" parameterType="DealerBean">		update		t_dealer		set		pwd = #{pwd},		update_by = #{updateBy},		update_time = #{updateTime}		where		dealer_id = #{dealerId}	</update>    <update id="updateDealer" parameterType="DealerBean">        update t_dealer        set        dealer_name = #{dealerName}        <if test="pwd != null">            ,pwd = #{pwd}        </if>        <if test="headImg != null and headImg != ''">            ,head_img = #{headImg}        </if>        ,true_name = #{trueName}        ,dept_id = #{deptId}        ,nick_name = #{nickName}        <if test="introduce != null">            ,introduce = #{introduce}        </if>        <if test="investment_philosophy != null">            ,investment_philosophy = #{investmentPhilosophy}        </if>        <if test="investment_strategy != null">            ,investment_strategy = #{investmentStrategy}        </if>        <if test="overallProfitAndLoss != null">            ,overall_profit_and_loss = #{overallProfitAndLoss}        </if>        <if test="avgProfitRatio != null">            ,avg_profit_ratio = #{avgProfitRatio}        </if>        ,list_order = #{listOrder}        <if test="updateTime != null">            ,update_time = #{updateTime}        </if>        <if test="updateBy != null and updateBy != 0">            ,update_by = #{updateBy}        </if>        where        dealer_id = #{dealerId}    </update>    <select id="listDealerByPage" parameterType="page" resultMap="DealerResult">        select        <include refid="baseSelect"/>        from        t_dealer        where        state = #{vo.state}        <if test="params.keyword != null and params.keyword != ''">            and (dealer_name like #{params.keyword} or true_name like #{params.keyword})        </if>    </select>    <select id="listAllDealers" parameterType="java.util.Map" resultMap="DealerResult">        select        <include refid="baseSelect"/>        from        t_dealer        where        state = #{state}        <if test="dealerId != null and dealerId != ''">            and dealer_id = #{dealerId}        </if>        <if test="keyword != null and keyword != ''">            and (manager_name like #{keyword} or true_name like #{keyword})        </if>    </select>    <select id="listAllDealers4View" parameterType="java.util.Map" resultMap="DealerResult">        select        <include refid="baseSelect"/>        from        t_dealer        where        state = #{state}    </select>    <select id="listAllDealersJoinProducts" parameterType="java.util.Map" resultMap="DealerJoinProductsResult">        <include refid="dealerJoinProductsSelect"/>        where        d.state = #{state} and p.state = #{productState}        <if test="dealerId != null and dealerId != ''">            and d.dealer_id = #{dealerId}        </if>    </select>    <select id="findDealerById" parameterType="java.lang.String" resultMap="DealerResult">        select        <include refid="baseSelect"/>        from        t_dealer        where        dealer_id = #{dealerId}    </select>    <select id="getDealerBean" parameterType="DealerBean" resultMap="DealerResult">        select        <include refid="baseSelect"/>        from        t_dealer        where        dealer_name = #{dealerName}        <if test="authorityGroupId != null and authorityGroupId != 0">            and authority_group_id = #{authorityGroupId}        </if>        <if test="dealerId != null and dealerId != ''">            and dealer_id <![CDATA[<>]]> #{dealerId}        </if>        and        state = #{state}    </select>    <update id="removeDealerById" parameterType="DealerBean">		update			t_dealer		set			state = #{state},			update_time = #{updateTime},			update_by = #{updateBy}		where		dealer_id = #{dealerId}	</update>    <update id="removeDealersById" parameterType="DealerVo">        update          t_dealer        set            state = #{state},            update_time = #{updateTime},            update_by = #{updateBy}        where          dealer_id in        <foreach collection="dealerIds" item="dealerId" open="(" close=")" separator=",">            #{dealerId}        </foreach>    </update></mapper>